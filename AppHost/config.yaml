receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      
processors:
  batch:
  tail_sampling:
    decision_wait: 1s
    policies:
      [
        {
          # Rule 1: use always_sample policy for services that don't belong to team_a and are not ready to use tail sampling
          name: backwards-compatibility-policy,
          type: and,
          and:
            {
              and_sub_policy:
                [
                  {
                    name: services-using-tail_sampling-policy,
                    type: string_attribute,
                    string_attribute:
                      {
                        key: service.name,
                        values:
                          [
                            service-4,
                            service-5,
                            service-6
                          ],
                      },
                  },
                  { name: sample-all-policy, type: always_sample },
                ],
            },
        },
        # BEGIN: policies for team_a
        {
          # Rule 2: low sampling for readiness/liveness probes
          name: team_a-probe,
          type: and,
          and:
            {
              and_sub_policy:
                [
                  {
                    # filter by service name
                    name: service-name-policy,
                    type: string_attribute,
                    string_attribute:
                      {
                        key: service.name,
                        values: [ service-1, service-2, service-3 ],
                      },
                  },
                  {
                    # filter by route
                    name: route-live-ready-policy,
                    type: string_attribute,
                    string_attribute:
                      {
                        key: http.route,
                        values: [ /live, /ready ],
                        enabled_regex_matching: true,
                      },
                  },
                  {
                    # apply probabilistic sampling
                    name: probabilistic-policy,
                    type: probabilistic,
                    probabilistic: { sampling_percentage: 10 },
                  },
                ],
            },
        },
        {
          # Rule 5: always sample if there is an error
          name: team_a-status-policy,
          type: and,
          and:
            {
              and_sub_policy:
                [
                  {
                    name: service-name-policy,
                    type: string_attribute,
                    string_attribute:
                      {
                        key: service.name,
                        values:
                          [
                            service-1,
                            service-2,
                            service-3
                          ],
                      },
                  },
                  {
                    name: trace-status-policy,
                    type: status_code,
                    status_code: { status_codes: [ ERROR ] },
                  },
                ],
            },
        },
      ]
    
exporters:
  debug:
    verbosity: detailed
    
service:
  extensions: []
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch, tail_sampling]
      exporters: [debug]
    metrics:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ debug ]
    logs:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ debug ]